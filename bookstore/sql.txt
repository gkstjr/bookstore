-- 멤버 테이블 (member)
drop table member;
create table member(
member_id varchar2(20) primary key check(regexp_like(member_id, '^[a-z][a-z0-9]{7,19}$')),
member_pw varchar2(16) not null 
check(regexp_like(member_pw, '[a-z]+') and regexp_like(member_pw, '[A-Z]+')
			and regexp_like(member_pw, '[0-9]+') and regexp_like(member_pw, '[!@#$]+')),
member_nick varchar2(30) not null unique check(regexp_like(member_nick, '^[ㄱ-ㅎ가-힣0-9]{1,10}$')),
member_phone char(11) not null check(regexp_like(member_phone, '^010[1-9][0-9]{7}$')),
member_email varchar2(100) not null,
member_birth char(10) not null,
member_post varchar2(6),
member_basic_address varchar2(300),
member_detail_address varchar2(300),
member_point number default 0 not null check(member_point >= 0),
member_grade varchar2(15) default '일반회원' not null check(member_grade in ('일반회원', '도서관리자', '관리자')),
member_joindate date default sysdate not null,
member_logindate date
);

-- 도서 테이블 (book)
create table book(
book_no number primary key,
book_title varchar2(150),
book_isbn number,
book_image varchar2(150),
book_auth varchar2(100),
book_publ varchar2(100),
book_pub date,
book_description varchar2(150),
book_type number
);


-- 첨부파일 테이블 (attachment)
create table attachment (
attachment_no number primary key,
attachment_uploadname varchar2(256) not null,
attachment_savename varchar2(256) not null,
attachment_type varchar2(256) not null,
attachment_size number default 0 not null
);
create sequence attachment_seq;

-- member 프로필 테이블 (member_profile)
	create table member_profile (
	member_id references member(member_id) on delete cascade,
	attachment_no references attachment(attachment_no) on delete cascade,
	primary key(member_id, attachment_no)
	);
    
-- 게시판 테이블 (board)
drop table board;
create table board(
board_no number primary key,
board_title varchar2(300) not null,
board_content varchar2(4000) not null,
board_time date default sysdate not null,
board_readcount number default 0 not null,
board_writer references member(member_id) on delete set null
);
create sequence board_seq;

-- 댓글 테이블 (reply)
create table reply(
reply_no number primary key,
reply_content varchar2(600) not null,
reply_time date default sysdate not null,
reply_target references board(board_no) on delete cascade
);
create sequence reply_seq;